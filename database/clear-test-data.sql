-- ============================================================================
-- SCRIPT PARA LIMPAR DADOS DE TESTE - FINTOGETHER
-- ‚ö†Ô∏è  Remove dados de usu√°rios espec√≠ficos ou dados de teste
-- ============================================================================

-- Este script permite limpar dados de forma mais seletiva
-- √ötil quando voc√™ quer manter alguns usu√°rios mas limpar dados de teste

BEGIN;

-- ============================================================================
-- OP√á√ÉO 1: LIMPAR DADOS DE UM USU√ÅRIO ESPEC√çFICO
-- ============================================================================

-- Descomente e substitua 'seu-email@exemplo.com' pelo email do usu√°rio que quer limpar
/*
DO $$
DECLARE
    target_user_id uuid;
    target_email text := 'seu-email@exemplo.com'; -- ALTERE AQUI
BEGIN
    -- Buscar o ID do usu√°rio
    SELECT id INTO target_user_id FROM public.users WHERE email = target_email;

    IF target_user_id IS NULL THEN
        RAISE NOTICE 'Usu√°rio com email % n√£o encontrado', target_email;
        RETURN;
    END IF;

    RAISE NOTICE 'Limpando dados do usu√°rio: % (ID: %)', target_email, target_user_id;

    -- Limpar na ordem correta (foreign keys)
    DELETE FROM public.transactions WHERE user_id = target_user_id;
    DELETE FROM public.recurring_rules WHERE user_id = target_user_id;
    DELETE FROM public.accounts WHERE user_id = target_user_id;
    DELETE FROM public.categories WHERE user_id = target_user_id AND is_system = false;

    -- Remover do casal se estiver em um
    UPDATE public.couples SET status = 'inactive'
    WHERE (partner_1_email = target_email OR partner_2_email = target_email)
    AND status = 'active';

    RAISE NOTICE 'Dados do usu√°rio % limpos com sucesso!', target_email;
END$$;
*/

-- ============================================================================
-- OP√á√ÉO 2: LIMPAR APENAS TRANSA√á√ïES E MANTER CONTAS/CATEGORIAS
-- ============================================================================

-- Descomente para limpar apenas transa√ß√µes (manter contas e categorias personalizadas)
/*
TRUNCATE TABLE public.transactions CASCADE;
TRUNCATE TABLE public.recurring_rules CASCADE;

RAISE NOTICE 'Transa√ß√µes e regras recorrentes removidas. Contas e categorias mantidas.';
*/

-- ============================================================================
-- OP√á√ÉO 3: LIMPAR DADOS DOS √öLTIMOS X DIAS
-- ============================================================================

-- Descomente e ajuste o n√∫mero de dias para manter apenas dados recentes
/*
DO $$
DECLARE
    days_to_keep integer := 30; -- ALTERE AQUI: manter √∫ltimos X dias
    cutoff_date date := CURRENT_DATE - days_to_keep;
BEGIN
    RAISE NOTICE 'Removendo transa√ß√µes anteriores a %', cutoff_date;

    DELETE FROM public.transactions
    WHERE transaction_date < cutoff_date;

    RAISE NOTICE 'Transa√ß√µes antigas removidas. Mantidas transa√ß√µes dos √∫ltimos % dias.', days_to_keep;
END$$;
*/

-- ============================================================================
-- OP√á√ÉO 4: RESET COMPLETO PARA DESENVOLVIMENTO (PADR√ÉO)
-- ============================================================================

-- Esta √© a op√ß√£o padr√£o que ser√° executada
-- Remove todos os dados mas mant√©m estrutura e categorias do sistema

SET session_replication_role = replica;

-- Remover dados em ordem segura
DELETE FROM public.transactions;
DELETE FROM public.recurring_rules;
DELETE FROM public.accounts;
DELETE FROM public.categories WHERE is_system = false;
DELETE FROM public.couples;
DELETE FROM public.users;

SET session_replication_role = DEFAULT;

-- ============================================================================
-- LOG FINAL
-- ============================================================================
DO $$
DECLARE
    transactions_count integer;
    users_count integer;
    couples_count integer;
    accounts_count integer;
    categories_count integer;
    system_categories_count integer;
BEGIN
    SELECT COUNT(*) INTO transactions_count FROM public.transactions;
    SELECT COUNT(*) INTO users_count FROM public.users;
    SELECT COUNT(*) INTO couples_count FROM public.couples;
    SELECT COUNT(*) INTO accounts_count FROM public.accounts;
    SELECT COUNT(*) INTO categories_count FROM public.categories WHERE is_system = false;
    SELECT COUNT(*) INTO system_categories_count FROM public.categories WHERE is_system = true;

    RAISE NOTICE '‚úÖ Limpeza de dados conclu√≠da!';
    RAISE NOTICE '';
    RAISE NOTICE 'Estado atual:';
    RAISE NOTICE 'üìä Transa√ß√µes: %', transactions_count;
    RAISE NOTICE 'üë§ Usu√°rios: %', users_count;
    RAISE NOTICE 'üíë Casais: %', couples_count;
    RAISE NOTICE 'üè¶ Contas: %', accounts_count;
    RAISE NOTICE 'üìÇ Categorias personalizadas: %', categories_count;
    RAISE NOTICE 'üè∑Ô∏è Categorias do sistema: %', system_categories_count;
    RAISE NOTICE '';
    RAISE NOTICE 'üîÑ Pronto para novos dados de teste!';
END$$;

COMMIT;
